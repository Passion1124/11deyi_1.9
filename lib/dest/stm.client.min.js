!function(e){function f(){this.reqID=0,this.state=h.Success,this.data=null}var g=e.stm=e.stm||{},h={Success:0,Failed:1};g.Response=f,g.Response.State=h}(this),function(c){var d=c.stm=c.stm||{};d.ContentProtocol={onOpen:function(a){a()},onClose:function(){},parse:function(a){return new d.Response},build:function(b,e,a){return new ArrayBuffer(2)},buildFailedMessage:function(a,b){return new ArrayBuffer(2)},extend:function(a){if(a.__proto__){a.__proto__=this}else{for(var b in this){this.hasOwnProperty(b)&&!a.hasOwnProperty(b)&&(a[b]=this[b])}this.hasOwnProperty("toString")&&!a.hasOwnProperty("toString")&&(a.toString=this.toString)}return a.$parent=this,a}}}(this),function(c){var d=c.stm=c.stm||{};d.DefaultContentProtocol={parse:function(e){var a=new d.Response,b=new DataView(e);return a.reqID=b.getUint32(0),a.state=0==b.getUint8(4)?d.Response.State.Success:d.Response.State.Failed,a.data=e.slice(5),a},build:function(e,m,a){if(e=e||"","string"!=typeof e&&!(e instanceof ArrayBuffer)){return"body type is error, must be string or ArrayBuffer"}if(m=m||{},"object"!=typeof m){return"headers must be a object type, for example {uri: '/location'}"}var b=0;for(var i in m){if(m.hasOwnProperty(i)){if("string"!=typeof i||"string"!=typeof m[i]){return"headers' key or property must be string"}if(i.length>255){return"length of headers' key <"+i+"> more than 255"}if(m[i].length>255){return"length of headers' object <"+m[i]+"> more than 255"}0!=i.length&&0!=m[i].length&&(b+=2+i.length+m[i].length)}}e=new StringView(e);var n=new ArrayBuffer(4+e.rawData.byteLength+1+b);new DataView(n).setUint32(0,a);var l=4;for(i in m){m.hasOwnProperty(i)&&(new DataView(n).setUint8(l,i.length),l++,new Uint8Array(n).set(new StringView(i).rawData,l),l+=i.length,new DataView(n).setUint8(l,m[i].length),l++,new Uint8Array(n).set(new StringView(m[i]).rawData,l),l+=m[i].length)}return new DataView(n).setUint8(l,0),l++,new Uint8Array(n).set(e.rawData,l),n},buildFailedMessage:function(e,a){e=new StringView(e);var b=new ArrayBuffer(4+e.rawData.byteLength+1);return new DataView(b).setUint32(0,a),new DataView(b).setUint8(4,d.Response.State.Failed),new Uint8Array(b).set(e.rawData,5),b}}}(this),function(e){function t(d,k,g,h,j,b){this.body=d||"",this.headers=g||{},this.onSuccess=k||function(m){},this.onFailed=h||function(m){},this.onComplete=j||function(){},this.reqID=b}function n(){function b(d){d.net_=null,d.netArgs_="",d.requests_=Object.create(null),d.protocol_=f.ContentProtocol.extend(f.DefaultContentProtocol),d.blockRequest_=null,d.isBlock_=!1,d.reqID_=s,d.onConnectionSuc_=function(){},d.onConnectionFaild_=function(g){},d.normalOnMessage_=function(g){},d.connectTimeout_=30}b(this),this.onPush=function(d){}}function o(b){return new i(b)}function r(b){setTimeout(b,0)}function i(b){this.client_=b}if("function"!=typeof StringView){return void console.error("can not find StringView. this error maybe cause 'stm.Client is not a constructor'. you can find in https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView or https://github.com/madmurphy/stringview.js")}var s=200,a=s-1,u=1,c=n.prototype;c.setConnectArgs=function(g,b,d){this.netArgs_=g,this.onConnectionFaild_=d||function(h){},this.onConnectionSuc_=b||function(){}},c.setConfig=function(b){this.connectTimeout_=b},c.setBlockRequestOnConnected=function(h,g,d,j,b){this.blockRequest_=new t(h,g,d,j,b,a)},c.addRequest=function(g,d,j,h,b){if(null==this.netArgs_){return"function"==typeof b&&b(),void ("function"==typeof h&&h("net args not set"))}var k=o(this).getReqID();return this.requests_[k.toString()]=new t(g,d,j,h,b,k),this.isBlock_?void 0:null!=this.net_&&this.net_.readyState==WebSocket.OPEN?void o(this).sendRequest(this.requests_[k.toString()]):void (null!=this.net_&&this.net_.readyState==WebSocket.CONNECTING||o(this).connect())};var l=i.prototype;l.getReqID=function(){return this.client_.reqID_++,this.client_.reqID_<s&&(this.client_.reqID_=s),this.client_.reqID_},l.sendRequest=function(g){var b=this.client_,d=b.protocol_.build(g.body,g.headers,g.reqID);return"string"==typeof d?void r(function(){var h=b.protocol_.buildFailedMessage(d,g.reqID);b.net_.onmessage({data:h})}):void b.net_.send(d)},l.connect=function(){var g=this.client_;this.client_.normalOnMessage_=function(k){var h=g.protocol_.parse(k);if(h.reqID==u){return void g.onPush(h.data)}var j=g.requests_[h.reqID.toString()];return null==j?void console.error("not find request for reqID<"+h.reqID+">"):(j.onComplete(),h.state!=f.Response.State.Success?null===h.data||void 0===h.data?j.onFailed("may be server error, but server has closed the error log"):j.onFailed(new StringView(h.data).toString()):j.onSuccess(h.data),void delete g.requests_[h.reqID.toString()])},this.client_.net_=new WebSocket(this.client_.netArgs_),g.net_.haserror=!1,g.net_.binaryType="arraybuffer",g.net_.onmessage=function(h){g.normalOnMessage_(h.data)};var b=setTimeout(function(){g.net_.timeout()},1000*g.connectTimeout_),d=this;g.net_.onopen=function(h){null!=b&&(clearTimeout(b),b=null),null!=g.blockRequest_?d.sendBlockRequest():d.sendAllRequest(),g.protocol_.onOpen(g.onConnectionSuc_)},g.net_.onclose=function(h){null!=b&&(clearTimeout(b),b=null),g.net_.close(1000),g.protocol_.onClose(),g.net_.haserror||(g.net_.haserror=!1,d.netError("connection closed by peer or connection error"))},g.net_.onerror=function(h){g.net_.haserror=!0,null!=b&&(clearTimeout(b),b=null),d.netError("connect error---"+JSON.stringify(h))},g.net_.timeout=function(h){b=null,this.onopen=function(j){},this.onclose=function(j){},this.onerror=function(j){},this.onmessage=function(j){},g.net_=null,d.netError("connect timeout")}},l.sendAllRequest=function(){var d=this.client_;for(var b in d.requests_){this.sendRequest(d.requests_[b])}},l.sendBlockRequest=function(){var g=this.client_;g.isBlock_=!0;var b=this,d=function(p){var j=g.protocol_.parse(p),k=!0,m=!0,h=g.blockRequest_;h.onComplete(),j.state!=f.Response.State.Success?(m=!1,null===j.data||void 0===j.data?h.onFailed("may be server error, but server has closed the error log"):h.onFailed(new StringView(j.data).toString())):k=!(h.onSuccess(j.data)===!1),k=k&&m,m||b.errorAllRequest("block request error---"+new StringView(j.data).toString()),k?b.sendAllRequest():m&&b.errorAllRequest("block request stop this request continuing"),g.isBlock_=!1,g.net_.onmessage=function(q){g.normalOnMessage_(q.data)}};g.net_.onmessage=function(h){d(h.data)},this.sendRequest(g.blockRequest_)},l.errorAllRequest=function(g){var b=this.client_;for(var d in b.requests_){!function(h){r(function(){b.normalOnMessage_(b.protocol_.buildFailedMessage(g,h))})}(Number(d))}},l.netError=function(d){var b=this.client_;b.isBlock_&&r(function(){var g=b.protocol_.buildFailedMessage(d,a);b.net_.onmessage({data:g})}),this.errorAllRequest(d),b.onConnectionFaild_(d)};var f=e.stm=e.stm||{};f.Client=n}(this);