(function(h){var e=h.stm=h.stm||{};var g={Success:0,Failed:1};function f(){this.reqID=0;this.state=g.Success;this.data=null}e.Response=f;e.Response.State=g})(this);(function(c){var d=c.stm=c.stm||{};d.ContentProtocol={onOpen:function(a){a()},onClose:function(){},parse:function(a){return new d.Response()},build:function(f,a,b){return new ArrayBuffer(2)},buildFailedMessage:function(b,a){return new ArrayBuffer(2)},extend:function(a){if(a.__proto__){a.__proto__=this}else{for(var b in this){if(this.hasOwnProperty(b)&&!a.hasOwnProperty(b)){a[b]=this[b]}}if(this.hasOwnProperty("toString")&&!a.hasOwnProperty("toString")){a.toString=this.toString}}a.$parent=this;return a}}})(this);(function(c){var d=c.stm=c.stm||{};d.DefaultContentProtocol={parse:function(a){var b=new d.Response();var f=new DataView(a);b.reqID=f.getUint32(0);b.state=(f.getUint8(4)==0)?d.Response.State.Success:d.Response.State.Failed;b.data=a.slice(5);return b},build:function(n,b,k){n=n||"";if(typeof n!=="string"&&!(n instanceof ArrayBuffer)){return"body type is error, must be string or ArrayBuffer"}b=b||{};if(typeof b!=="object"){return"headers must be a object type, for example {uri: '/location'}"}var j=0;for(var l in b){if(!b.hasOwnProperty(l)){continue}if(typeof l!=="string"||typeof b[l]!=="string"){return"headers' key or property must be string"}if(l.length>255){return"length of headers' key <"+l+"> more than 255"}if(b[l].length>255){return"length of headers' object <"+b[l]+"> more than 255"}if(l.length==0||b[l].length==0){continue}j+=1+1+l.length+b[l].length}n=new StringView(n);var m=new ArrayBuffer(4+n.rawData.byteLength+1+j);(new DataView(m)).setUint32(0,k);var a=4;for(l in b){if(!b.hasOwnProperty(l)){continue}(new DataView(m)).setUint8(a,l.length);a++;(new Uint8Array(m)).set((new StringView(l)).rawData,a);a+=l.length;(new DataView(m)).setUint8(a,b[l].length);a++;(new Uint8Array(m)).set((new StringView(b[l])).rawData,a);a+=b[l].length}(new DataView(m)).setUint8(a,0);a++;(new Uint8Array(m)).set(n.rawData,a);return m},buildFailedMessage:function(b,a){b=new StringView(b);var f=new ArrayBuffer(4+b.rawData.byteLength+1);(new DataView(f)).setUint32(0,a);(new DataView(f)).setUint8(4,d.Response.State.Failed);(new Uint8Array(f)).set(b.rawData,5);return f}}})(this);(function(t){if(typeof StringView!=="function"){console.error("can not find StringView. this error maybe cause 'stm.Client is not a constructor'. you can find in https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView or https://github.com/madmurphy/stringview.js");return}function x(a,b,c,f,d,e){this.body=a||"";this.headers=c||{};this.onSuccess=b||function(g){};this.onFailed=f||function(g){};this.onComplete=d||function(){};this.reqID=e}var q=200;var u=q-1;var v=1;function w(){function a(b){b.net_=null;b.netArgs_="";b.requests_=Object.create(null);b.protocol_=n.ContentProtocol.extend(n.DefaultContentProtocol);b.blockRequest_=null;b.isBlock_=false;b.reqID_=q;b.onConnectionSuc_=function(){};b.onConnectionFaild_=function(c){};b.normalOnMessage_=function(c){};b.connectTimeout_=30}a(this);this.onPush=function(b){}}function s(a){return new m(a)}var o=w.prototype;o.setConnectArgs=function(a,b,c){this.netArgs_=a;this.onConnectionFaild_=c||function(d){};this.onConnectionSuc_=b||function(){}};o.setConfig=function(a){this.connectTimeout_=a};o.setBlockRequestOnConnected=function(a,b,c,e,d){this.blockRequest_=new x(a,b,c,e,d,u)};o.addRequest=function(a,b,c,f,d){if(this.netArgs_==null){if(typeof d==="function"){d()}if(typeof f==="function"){f("net args not set")}return}var e=s(this).getReqID();this.requests_[e.toString()]=new x(a,b,c,f,d,e);if(this.isBlock_){return}if(this.net_!=null&&this.net_.readyState==WebSocket.OPEN){s(this).sendRequest(this.requests_[e.toString()]);return}if(this.net_!=null&&this.net_.readyState==WebSocket.CONNECTING){return}s(this).connect()};function p(a){setTimeout(a,0)}function m(a){this.client_=a}var r=m.prototype;r.getReqID=function(){this.client_.reqID_++;if(this.client_.reqID_<q){this.client_.reqID_=q}return this.client_.reqID_};r.sendRequest=function(c){var a=this.client_;var b=a.protocol_.build(c.body,c.headers,c.reqID);if(typeof b=="string"){p(function(){var d=a.protocol_.buildFailedMessage(b,c.reqID);a.net_.onmessage({data:d})});return}a.net_.send(b)};r.connect=function(){var a=this.client_;this.client_.normalOnMessage_=function(d){var f=a.protocol_.parse(d);if(f.reqID==v){a.onPush(f.data);return}var e=a.requests_[f.reqID.toString()];if(e==null){console.error("not find request for reqID<"+f.reqID+">");return}e.onComplete();if(f.state!=n.Response.State.Success){if(f.data===null||f.data===undefined){e.onFailed("may be server error, but server has closed the error log")}else{e.onFailed((new StringView(f.data)).toString())}}else{e.onSuccess(f.data)}delete a.requests_[f.reqID.toString()]};this.client_.net_=new WebSocket(this.client_.netArgs_);a.net_.haserror=false;a.net_.binaryType="arraybuffer";a.net_.onmessage=function(d){a.normalOnMessage_(d.data)};var b=setTimeout(function(){a.net_.timeout()},a.connectTimeout_*1000);var c=this;a.net_.onopen=function(d){if(b!=null){clearTimeout(b);b=null}if(a.blockRequest_!=null){c.sendBlockRequest()}else{c.sendAllRequest()}a.protocol_.onOpen(a.onConnectionSuc_)};a.net_.onclose=function(d){if(b!=null){clearTimeout(b);b=null}a.net_.close(1000);a.protocol_.onClose();if(!a.net_.haserror){a.net_.haserror=false;c.netError("connection closed by peer or connection error")}};a.net_.onerror=function(d){a.net_.haserror=true;if(b!=null){clearTimeout(b);b=null}c.netError("connect error---"+JSON.stringify(d))};a.net_.timeout=function(d){b=null;this.onopen=function(e){};this.onclose=function(e){};this.onerror=function(e){};this.onmessage=function(e){};a.net_=null;c.netError("connect timeout")}};r.sendAllRequest=function(){var a=this.client_;for(var b in a.requests_){this.sendRequest(a.requests_[b])}};r.sendBlockRequest=function(){var c=this.client_;c.isBlock_=true;var b=this;var a=function(f){var h=c.protocol_.parse(f);var e=true;var d=true;var g=c.blockRequest_;g.onComplete();if(h.state!=n.Response.State.Success){d=false;if(h.data===null||h.data===undefined){g.onFailed("may be server error, but server has closed the error log")}else{g.onFailed((new StringView(h.data)).toString())}}else{e=!(g.onSuccess(h.data)===false)}e=e&&d;if(!d){b.errorAllRequest("block request error---"+(new StringView(h.data)).toString())}if(e){b.sendAllRequest()}else{if(d){b.errorAllRequest("block request stop this request continuing")}}c.isBlock_=false;c.net_.onmessage=function(i){c.normalOnMessage_(i.data)}};c.net_.onmessage=function(d){a(d.data)};this.sendRequest(c.blockRequest_)};r.errorAllRequest=function(c){var a=this.client_;for(var b in a.requests_){(function(d){p(function(){a.normalOnMessage_(a.protocol_.buildFailedMessage(c,d))})})(Number(b))}};r.netError=function(b){var a=this.client_;if(a.isBlock_){p(function(){var c=a.protocol_.buildFailedMessage(b,u);a.net_.onmessage({data:c})})}this.errorAllRequest(b);a.onConnectionFaild_(b)};var n=t.stm=t.stm||{};n.Client=w})(this);