!function(b){function a(){this.reqID=0,this.state=c.Success,this.data=null}var d=b.stm=b.stm||{},c={Success:0,Failed:1};d.Response=a,d.Response.State=c}(this),function(b){var a=b.stm=b.stm||{};a.ContentProtocol={onOpen:function(c){c()},onClose:function(){},parse:function(c){return new a.Response},build:function(d,c,f){return new ArrayBuffer(2)},buildFailedMessage:function(d,c){return new ArrayBuffer(2)},extend:function(d){if(d.__proto__){d.__proto__=this}else{for(var c in this){this.hasOwnProperty(c)&&!d.hasOwnProperty(c)&&(d[c]=this[c])}this.hasOwnProperty("toString")&&!d.hasOwnProperty("toString")&&(d.toString=this.toString)}return d.$parent=this,d}}}(this),function(b){var a=b.stm=b.stm||{};a.DefaultContentProtocol={parse:function(c){var f=new a.Response,d=new DataView(c);return f.reqID=d.getUint32(0),f.state=0==d.getUint8(4)?a.Response.State.Success:a.Response.State.Failed,f.data=c.slice(5),f},build:function(h,d,k){if(h=h||"","string"!=typeof h&&!(h instanceof ArrayBuffer)){return"body type is error, must be string or ArrayBuffer"}if(d=d||{},"object"!=typeof d){return"headers must be a object type, for example {uri: '/location'}"}var j=0;for(var g in d){if(d.hasOwnProperty(g)){if("string"!=typeof g||"string"!=typeof d[g]){return"headers' key or property must be string"}if(g.length>255){return"length of headers' key <"+g+"> more than 255"}if(d[g].length>255){return"length of headers' object <"+d[g]+"> more than 255"}0!=g.length&&0!=d[g].length&&(j+=2+g.length+d[g].length)}}h=new StringView(h);var c=new ArrayBuffer(4+h.rawData.byteLength+1+j);new DataView(c).setUint32(0,k);var f=4;for(g in d){d.hasOwnProperty(g)&&(new DataView(c).setUint8(f,g.length),f++,new Uint8Array(c).set(new StringView(g).rawData,f),f+=g.length,new DataView(c).setUint8(f,d[g].length),f++,new Uint8Array(c).set(new StringView(d[g]).rawData,f),f+=d[g].length)}return new DataView(c).setUint8(f,0),f++,new Uint8Array(c).set(h.rawData,f),c},buildFailedMessage:function(c,f){c=new StringView(c);var d=new ArrayBuffer(4+c.rawData.byteLength+1);return new DataView(d).setUint32(0,f),new DataView(d).setUint8(4,a.Response.State.Failed),new Uint8Array(d).set(c.rawData,5),d}}}(this),function(m){function w(l,c,u,s,f,a){this.body=l||"",this.headers=u||{},this.onSuccess=c||function(i){},this.onFailed=s||function(i){},this.onComplete=f||function(){},this.reqID=a}function g(){function a(c){c.net_=null,c.netArgs_="",c.requests_=Object.create(null),c.protocol_=k.ContentProtocol.extend(k.DefaultContentProtocol),c.blockRequest_=null,c.isBlock_=!1,c.reqID_=x,c.onConnectionSuc_=function(){},c.onConnectionFaild_=function(f){},c.normalOnMessage_=function(f){},c.connectTimeout_=30}a(this),this.onPush=function(c){}}function d(a){return new j(a)}function b(a){setTimeout(a,0)}function j(a){this.client_=a}if("function"!=typeof StringView){return void console.error("can not find StringView. this error maybe cause 'stm.Client is not a constructor'. you can find in https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView or https://github.com/madmurphy/stringview.js")}var x=200,q=x-1,v=1,p=g.prototype;p.setConnectArgs=function(c,a,f){this.netArgs_=c,this.onConnectionFaild_=f||function(i){},this.onConnectionSuc_=a||function(){}},p.setConfig=function(a){this.connectTimeout_=a},p.setBlockRequestOnConnected=function(f,s,l,c,a){this.blockRequest_=new w(f,s,l,c,a,q)},p.addRequest=function(t,u,o,f,l){if(null==this.netArgs_){return"function"==typeof l&&l(),void ("function"==typeof f&&f("net args not set"))}var c=d(this).getReqID();return this.requests_[c.toString()]=new w(t,u,o,f,l,c),this.isBlock_?void 0:null!=this.net_&&this.net_.readyState==WebSocket.OPEN?void d(this).sendRequest(this.requests_[c.toString()]):void (null!=this.net_&&this.net_.readyState==WebSocket.CONNECTING||d(this).connect())};var h=j.prototype;h.getReqID=function(){return this.client_.reqID_++,this.client_.reqID_<x&&(this.client_.reqID_=x),this.client_.reqID_},h.sendRequest=function(c){var a=this.client_,f=a.protocol_.build(c.body,c.headers,c.reqID);return"string"==typeof f?void b(function(){var e=a.protocol_.buildFailedMessage(f,c.reqID);a.net_.onmessage({data:e})}):void a.net_.send(f)},h.connect=function(){var c=this.client_;this.client_.normalOnMessage_=function(e){var l=c.protocol_.parse(e);if(l.reqID==v){return void c.onPush(l.data)}var i=c.requests_[l.reqID.toString()];return null==i?void console.error("not find request for reqID<"+l.reqID+">"):(i.onComplete(),l.state!=k.Response.State.Success?null===l.data||void 0===l.data?i.onFailed("may be server error, but server has closed the error log"):i.onFailed(new StringView(l.data).toString()):i.onSuccess(l.data),void delete c.requests_[l.reqID.toString()])},this.client_.net_=new WebSocket(this.client_.netArgs_),c.net_.haserror=!1,c.net_.binaryType="arraybuffer",c.net_.onmessage=function(e){c.normalOnMessage_(e.data)};var a=setTimeout(function(){c.net_.timeout()},1000*c.connectTimeout_),f=this;c.net_.onopen=function(e){null!=a&&(clearTimeout(a),a=null),null!=c.blockRequest_?f.sendBlockRequest():f.sendAllRequest(),c.protocol_.onOpen(c.onConnectionSuc_)},c.net_.onclose=function(e){null!=a&&(clearTimeout(a),a=null),c.net_.close(1000),c.protocol_.onClose(),c.net_.haserror||(c.net_.haserror=!1,f.netError("connection closed by peer or connection error"))},c.net_.onerror=function(e){c.net_.haserror=!0,null!=a&&(clearTimeout(a),a=null),f.netError("connect error---"+JSON.stringify(e))},c.net_.timeout=function(e){a=null,this.onopen=function(i){},this.onclose=function(i){},this.onerror=function(i){},this.onmessage=function(i){},c.net_=null,f.netError("connect timeout")}},h.sendAllRequest=function(){var c=this.client_;for(var a in c.requests_){this.sendRequest(c.requests_[a])}},h.sendBlockRequest=function(){var c=this.client_;c.isBlock_=!0;var a=this,f=function(y){var u=c.protocol_.parse(y),t=!0,e=!0,l=c.blockRequest_;l.onComplete(),u.state!=k.Response.State.Success?(e=!1,null===u.data||void 0===u.data?l.onFailed("may be server error, but server has closed the error log"):l.onFailed(new StringView(u.data).toString())):t=!(l.onSuccess(u.data)===!1),t=t&&e,e||a.errorAllRequest("block request error---"+new StringView(u.data).toString()),t?a.sendAllRequest():e&&a.errorAllRequest("block request stop this request continuing"),c.isBlock_=!1,c.net_.onmessage=function(i){c.normalOnMessage_(i.data)}};c.net_.onmessage=function(i){f(i.data)},this.sendRequest(c.blockRequest_)},h.errorAllRequest=function(c){var a=this.client_;for(var f in a.requests_){!function(e){b(function(){a.normalOnMessage_(a.protocol_.buildFailedMessage(c,e))})}(Number(f))}},h.netError=function(c){var a=this.client_;a.isBlock_&&b(function(){var e=a.protocol_.buildFailedMessage(c,q);a.net_.onmessage({data:e})}),this.errorAllRequest(c),a.onConnectionFaild_(c)};var k=m.stm=m.stm||{};k.Client=g}(this);